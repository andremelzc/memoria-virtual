import React from 'react';
import { Link } from 'react-router-dom';

function AlgoritmoFIFO() {
  return (
    <div className="bg-dark-bg py-16 md:py-24 px-6 min-h-screen">
      <div className="container mx-auto max-w-4xl">
        {/* Breadcrumb */}
        <nav className="mb-8">
          <Link to="/blog" className="text-accent hover:text-accent-hover no-underline">
            ‚Üê Volver al Blog
          </Link>
        </nav>

        {/* Header del Art√≠culo */}
        <header className="mb-12">
          <div className="mb-4">
            <span className="inline-block bg-accent text-white text-sm font-semibold px-3 py-1 rounded-full">
              Algoritmos
            </span>
          </div>
          
          <h1 className="text-4xl md:text-5xl font-bold text-text-primary mb-6">
            Algoritmo FIFO: First In, First Out
          </h1>
          
          <p className="text-xl text-text-secondary">
            El algoritmo FIFO es el m√°s simple y f√°cil de implementar de todos los algoritmos 
            de reemplazo de p√°ginas. Su principio es intuitivo: la primera p√°gina que entra 
            es la primera que sale cuando se necesita espacio.
          </p>
        </header>

        {/* Contenido del Art√≠culo */}
        <article className="prose prose-lg max-w-none">
          
          <div className="bg-light-bg border border-dark-border rounded-lg p-6 mb-8">
            <h2 className="text-2xl font-bold text-text-primary mb-4">Principio de Funcionamiento</h2>
            <p className="text-text-secondary mb-4">
              El algoritmo FIFO (<strong>First In, First Out</strong>) mantiene un registro del orden 
              en que las p√°ginas fueron cargadas en memoria. Cuando es necesario reemplazar una p√°gina, 
              siempre selecciona la p√°gina que ha estado m√°s tiempo en memoria f√≠sica.
            </p>
            <p className="text-text-secondary">
              Es como una cola (queue): el primer elemento que entra es el primero que sale. 
              No considera qu√© tan frecuentemente se usa una p√°gina o cu√°ndo fue accedida por √∫ltima vez.
            </p>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Implementaci√≥n</h2>
          
          <div className="bg-gray-900 rounded-lg p-6 mb-8 overflow-x-auto">
            <pre className="text-green-400 text-sm">
              <code>{`def fifo(pages, frames):
    queue = deque()          # Cola para mantener orden FIFO
    in_memory = set()        # Conjunto para b√∫squeda r√°pida
    page_faults = 0          # Contador de page faults
    
    for page in pages:
        if page not in in_memory:
            page_faults += 1
            
            if len(in_memory) == frames:
                # Memoria llena: remover la p√°gina m√°s antigua
                oldest_page = queue.popleft()
                in_memory.remove(oldest_page)
            
            # Agregar la nueva p√°gina
            queue.append(page)
            in_memory.add(page)
    
    return page_faults`}</code>
            </pre>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Ejemplo Paso a Paso</h2>
          
          <p className="text-text-secondary mb-6">
            Veamos c√≥mo funciona FIFO con la secuencia de p√°ginas [7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3] 
            y 3 marcos de p√°gina:
          </p>
          
          <div className="bg-light-bg border border-dark-border rounded-lg p-6 mb-8">
            <div className="overflow-x-auto">
              <table className="w-full text-sm">
                <thead>
                  <tr className="border-b border-dark-border">
                    <th className="text-left py-2 px-3 text-text-primary">P√°gina</th>
                    <th className="text-left py-2 px-3 text-text-primary">Marco 1</th>
                    <th className="text-left py-2 px-3 text-text-primary">Marco 2</th>
                    <th className="text-left py-2 px-3 text-text-primary">Marco 3</th>
                    <th className="text-left py-2 px-3 text-text-primary">Page Fault</th>
                  </tr>
                </thead>
                <tbody className="text-text-secondary">
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">7</td>
                    <td className="py-2 px-3 bg-red-100 text-red-800">7</td>
                    <td className="py-2 px-3">-</td>
                    <td className="py-2 px-3">-</td>
                    <td className="py-2 px-3 text-red-600">‚úì</td>
                  </tr>
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">0</td>
                    <td className="py-2 px-3">7</td>
                    <td className="py-2 px-3 bg-red-100 text-red-800">0</td>
                    <td className="py-2 px-3">-</td>
                    <td className="py-2 px-3 text-red-600">‚úì</td>
                  </tr>
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">1</td>
                    <td className="py-2 px-3">7</td>
                    <td className="py-2 px-3">0</td>
                    <td className="py-2 px-3 bg-red-100 text-red-800">1</td>
                    <td className="py-2 px-3 text-red-600">‚úì</td>
                  </tr>
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">2</td>
                    <td className="py-2 px-3 bg-red-100 text-red-800">2</td>
                    <td className="py-2 px-3">0</td>
                    <td className="py-2 px-3">1</td>
                    <td className="py-2 px-3 text-red-600">‚úì (reemplaza 7)</td>
                  </tr>
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">0</td>
                    <td className="py-2 px-3">2</td>
                    <td className="py-2 px-3 bg-green-100 text-green-800">0</td>
                    <td className="py-2 px-3">1</td>
                    <td className="py-2 px-3 text-green-600">-</td>
                  </tr>
                  <tr className="border-b border-dark-border/50">
                    <td className="py-2 px-3 font-bold">3</td>
                    <td className="py-2 px-3">2</td>
                    <td className="py-2 px-3 bg-red-100 text-red-800">3</td>
                    <td className="py-2 px-3">1</td>
                    <td className="py-2 px-3 text-red-600">‚úì (reemplaza 0)</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <p className="text-sm text-text-secondary mt-4">
              üî¥ Rojo = Page fault (nueva p√°gina cargada) | üü¢ Verde = Hit (p√°gina ya en memoria)
            </p>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Ventajas del Algoritmo FIFO</h2>
          
          <div className="space-y-4 mb-8">
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úì</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Simplicidad</h3>
                <p className="text-text-secondary">
                  Es el algoritmo m√°s f√°cil de entender e implementar. Solo requiere 
                  mantener un registro del orden de llegada.
                </p>
              </div>
            </div>
            
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úì</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Bajo Overhead</h3>
                <p className="text-text-secondary">
                  Requiere muy poca memoria adicional y procesamiento para mantener 
                  el estado del algoritmo.
                </p>
              </div>
            </div>
            
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úì</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Equidad</h3>
                <p className="text-text-secondary">
                  Todas las p√°ginas tienen la misma "oportunidad" de permanecer en memoria 
                  por el mismo tiempo antes de ser reemplazadas.
                </p>
              </div>
            </div>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Desventajas del Algoritmo FIFO</h2>
          
          <div className="space-y-4 mb-8">
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úó</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Ignora el Patr√≥n de Uso</h3>
                <p className="text-text-secondary">
                  No considera qu√© tan frecuentemente se accede a una p√°gina o cu√°ndo 
                  fue utilizada por √∫ltima vez.
                </p>
              </div>
            </div>
            
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úó</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Anomal√≠a de Belady</h3>
                <p className="text-text-secondary">
                  En algunos casos, aumentar el n√∫mero de marcos de p√°gina puede 
                  resultar en m√°s page faults en lugar de menos.
                </p>
              </div>
            </div>
            
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-white text-sm">‚úó</span>
              </div>
              <div>
                <h3 className="text-lg font-bold text-text-primary">Rendimiento Sub√≥ptimo</h3>
                <p className="text-text-secondary">
                  Puede reemplazar p√°ginas que ser√°n necesarias pronto, resultando 
                  en m√°s page faults que otros algoritmos m√°s sofisticados.
                </p>
              </div>
            </div>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">La Anomal√≠a de Belady</h2>
          
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6 mb-8">
            <h4 className="text-lg font-bold text-yellow-800 mb-3">‚ö†Ô∏è Anomal√≠a de Belady</h4>
            <p className="text-yellow-700 mb-4">
              Una caracter√≠stica √∫nica del algoritmo FIFO es que puede experimentar la 
              "Anomal√≠a de Belady": en algunas secuencias de p√°ginas, aumentar el n√∫mero 
              de marcos de p√°gina disponibles puede resultar en m√°s page faults.
            </p>
            <p className="text-yellow-700">
              <strong>Ejemplo:</strong> La secuencia [1, 2, 3, 4, 1, 2, 5, 1, 2, 3, 4, 5] 
              produce 9 page faults con 3 marcos, pero 10 page faults con 4 marcos.
            </p>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Cu√°ndo Usar FIFO</h2>
          
          <p className="text-text-secondary mb-6">
            A pesar de sus limitaciones, FIFO puede ser apropiado en ciertos escenarios:
          </p>
          
          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <div className="bg-light-bg border border-dark-border rounded-lg p-6">
              <h3 className="text-lg font-bold text-text-primary mb-3">‚úÖ Apropiado Para:</h3>
              <ul className="space-y-2 text-text-secondary">
                <li>‚Ä¢ Sistemas con recursos muy limitados</li>
                <li>‚Ä¢ Aplicaciones con patrones de acceso secuencial</li>
                <li>‚Ä¢ Sistemas donde la simplicidad es prioritaria</li>
                <li>‚Ä¢ Prototipos y sistemas de prueba</li>
              </ul>
            </div>
            
            <div className="bg-light-bg border border-dark-border rounded-lg p-6">
              <h3 className="text-lg font-bold text-text-primary mb-3">‚ùå Evitar En:</h3>
              <ul className="space-y-2 text-text-secondary">
                <li>‚Ä¢ Sistemas de alto rendimiento</li>
                <li>‚Ä¢ Aplicaciones con patrones complejos de acceso</li>
                <li>‚Ä¢ Cuando el rendimiento es cr√≠tico</li>
                <li>‚Ä¢ Sistemas con memoria abundante</li>
              </ul>
            </div>
          </div>

          <h2 className="text-2xl font-bold text-text-primary mb-4">Comparaci√≥n de Rendimiento</h2>
          
          <div className="bg-light-bg border border-dark-border rounded-lg p-6 mb-8">
            <p className="text-text-secondary mb-4">
              En t√©rminos generales, el algoritmo FIFO tiende a producir m√°s page faults 
              que algoritmos m√°s sofisticados como LRU u Optimal, especialmente en aplicaciones 
              con patrones de acceso que exhiben localidad temporal.
            </p>
            <p className="text-text-secondary">
              Sin embargo, su simplicidad lo hace valioso en sistemas embebidos o 
              aplicaciones donde los recursos computacionales son muy limitados.
            </p>
          </div>

        </article>

        {/* Navegaci√≥n */}
        <div className="flex justify-between items-center mt-12 pt-8 border-t border-dark-border">
          <Link 
            to="/blog/introduccion-memoria-virtual" 
            className="text-accent hover:text-accent-hover no-underline font-semibold"
          >
            ‚Üê Anterior: Introducci√≥n a Memoria Virtual
          </Link>
          
          <Link 
            to="/blog/algoritmo-lru" 
            className="text-accent hover:text-accent-hover no-underline font-semibold"
          >
            Siguiente: Algoritmo LRU ‚Üí
          </Link>
        </div>
      </div>
    </div>
  );
}

export default AlgoritmoFIFO;